plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

architectury {
    injectInjectables = false
    platformSetupLoomIde()
    neoForge()
}

loom {}

repositories {
    maven { url "https://maven.neoforged.net/releases" }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    archivesBaseName = rootProject.archives_base_name + "-neoforge"
}

dependencies {
    neoForge "net.neoforged:neoforge:${rootProject.neoforge_version}"
    modImplementation "maven.modrinth:midnightlib:1.5.2-neoforge"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"

    // Avoid possible collision with other commons
    relocate ('me.l2jliga.lootbagmod', 'me.l2jliga.lootbagmod_neoforge') {
        exclude '%regex[me/l2jliga/lootbagmod_neoforge/.*]'
    }
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
