# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.

name: Release
on:
  release:
    types: [released]

jobs:
  # Prepare and publish the plugin to the Marketplace repository
  release:
    name: Publish Mod
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: 17
          cache: gradle

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          CHANGELOG="$(cat << 'EOM' | sed -e 's/^[[:space:]]*$//g' -e '/./,$!d'
          ${{ github.event.release.body }}
          EOM
          )"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

      - name: Build
        run: ./gradlew build

      # Update Unreleased section with the current release note
      - name: Patch Changelog
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          CHANGELOG: ${{ steps.properties.outputs.changelog }}
        run: |
          CHANGELOG="${CHANGELOG//'%25'/'%'}"
          CHANGELOG="${CHANGELOG//'%0A'/$'\n'}"
          CHANGELOG="${CHANGELOG//'%0D'/$'\r'}"

          ./gradlew patchChangelog --release-note="$CHANGELOG"

      - name: Publish Minecraft Mods
        uses: Kir-Antipov/mc-publish@v2.1
        with:
          modrinth-token: ${{ secrets.MODRINTH_TOKEN  }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN  }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

          version-type: release
          changelog: ${{ github.event.release.body }}

          loaders: fabric
          version-resolver: releases

          retry-attempts: 3
          retry-delay: 10000

      # Upload artifact as a release asset
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ./build/libs/*

      # Create pull request
      - name: Create Pull Request
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          BRANCH="changelog-update-$VERSION"

          git config user.email "action@github.com"
          git config user.name "GitHub Action"

          git checkout -b $BRANCH
          git commit -am "Changelog update - $VERSION"
          git push --set-upstream origin $BRANCH

          gh pr create \
            --title "Changelog update - \`$VERSION\`" \
            --body "Current pull request contains patched \`CHANGELOG.md\` file for the \`$VERSION\` version." \
            --base master \
            --head $BRANCH