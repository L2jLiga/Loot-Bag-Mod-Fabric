plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
    id "java"
    // gradle-changelog-plugin - read more: https://github.com/JetBrains/gradle-changelog-plugin
    id("org.jetbrains.changelog") version "2.2.0"
}

architectury {
    injectInjectables = false
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        // mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    processResources {
        def expandProps = [
                "version": version,
                "group": project.maven_group, //Else we target the task's group.
                "minecraft_version": minecraft_version,
                "fabric_api_version": fabric_api_version,
                "fabric_loader_version": fabric_loader_version,
                "mod_name": mod_name,
                "mod_id": mod_id,
                "license": license,
                "description": project.description
        ]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: "architectury-plugin"

    version = rootProject.mod_version
    version = project.mod_version + "-" + project.minecraft_version
    group = rootProject.maven_group
    archivesBaseName = rootProject.archives_base_name

    repositories {
        mavenCentral()
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            name = "MidNightLib source"
            url = "https://api.modrinth.com/maven"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(17)
    }
}

jar {
    subprojects.each { dependsOn("${it.name}:remapJar") }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(rootProject.file("LICENSE")) {
        rename { "${it}_${mod_name}" }
    }

    from zipTree("fabric/build/libs/${archives_base_name}-fabric-${version}.jar")
    from zipTree("neoforge/build/libs/${archives_base_name}-neoforge-${version}.jar")
}
